name: release
on:
  push:
    tags:
    - "v[0-9]+.[1-9]+.[0-9]*"
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - run: |
          export POSTFIX=" (Codename: '$(cat CODENAME)')"
          echo "::set-env name=RELEASE_NAME_POSTFIX::$POSTFIX"
      - name: Print Release Version
        run: |
          export RELEASE_VERSION=$(echo $GITHUB_REF | awk -F\/ '{print $3}')
          echo "::set-env name=RELEASE_VERSION::$RELEASE_VERSION"
          echo "Release Version is $RELEASE_VERSION"
          echo "$RELEASE_VERSION" > VERSION
      - name: Create Plugins
        run: |
          bash -c "chmod 755 .github/workflows/plugins.sh; .github/workflows/plugins.sh"
          bash -c "cd plugins/kubectl;  tar zcvf ../../bob-plugins-${{ env.RELEASE_VERSION }}.tgz *; cd ../.."
      - name: Build Action
        env: # Or as an environment variable
            docker_login: ${{ secrets.DOCKER_ID }}
            docker_token: ${{ secrets.DOCKER_TOKEN }}
        run: |
          bash -c "chmod 755 files/*; chmod 644 files/*.conf files/README"
          bash -c "chmod 755 .github/workflows/makedistro.sh; .github/workflows/makedistro.sh"
          bash -c "chmod 755 .github/workflows/init.sh; LATEST=true TAG=$RELEASE_VERSION DOCKERFILE=dockerfiles/Dockerfile       .github/workflows/init.sh bob-core"
          bash -c "chmod 755 .github/workflows/init.sh; LATEST=true TAG=$RELEASE_VERSION DOCKERFILE=dockerfiles/Dockerfile-bootstrap .github/workflows/init.sh bob-bootstrap"
          bash -c "chmod 755 .github/workflows/init.sh; LATEST=true TAG=$RELEASE_VERSION DOCKERFILE=dockerfiles/Dockerfile-mini  .github/workflows/init.sh bob-mini"
          bash -c "chmod 755 .github/workflows/charts.sh; .github/workflows/charts.sh"
          bash -c "cp docs/bob-${{ env.RELEASE_VERSION }}.tgz helm/bob-helm-${{ env.RELEASE_VERSION }}.tgz"
          bash -c "chmod 755 .github/workflows/update_readme.sh; .github/workflows/update_readme.sh"
          bash -c "chmod 755 .github/workflows/helpdocs.sh; .github/workflows/helpdocs.sh"
      - name: Run Snyk to check Docker image for vulnerabilities - bob-core
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: bobdotme/bob-core:${{ env.RELEASE_VERSION }}
          args: --severity-threshold=low
      - name: Run Snyk to check Docker image for vulnerabilities - bob-bootstrap
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: bobdotme/bob-bootstrap:${{ env.RELEASE_VERSION }}
          args: --severity-threshold=low
      - name: Run Snyk to check Docker image for vulnerabilities - bob
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: bobdotme/bob-mini:${{ env.RELEASE_VERSION }}
          args: --severity-threshold=low
      - name: push
        uses: github-actions-x/commit@v2.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'master'
          commit-message: 'publish'
          force-add: 'true'
          files: README.md VERSION docs/index.yaml docs/*.tgz docs/commands.md docs/commands/* helm/chart/* distro/*.tar.gz
          name: rsliotta
          email: bob@bobdot.me
      - name: Release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGELOG_FILE: "docs/changes.md"
          DRAFT_RELEASE: "false"
          PRE_RELEASE: "false"
          ALLOW_EMPTY_CHANGELOG: "false"
          ALLOW_TAG_PREFIX: "true"
        with:
          args: |
            examples/testpv.yaml
            bob-plugins-${{ env.RELEASE_VERSION }}.tgz
            plugins/installer.sh
            helm/bob-helm-${{ env.RELEASE_VERSION }}.tgz
