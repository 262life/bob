name: release
on:
  push:
    tags:
    - "v[0-9]+.[1-9]+.[0-9]*"
jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - run: |
          export POSTFIX=" (Codename: '$(cat CODENAME)')"
          echo "::set-env name=RELEASE_NAME_POSTFIX::$POSTFIX"
      - name: Print Release Version
        run: |
          export RELEASE_VERSION=$(echo $GITHUB_REF | awk -F\/ '{print $3}')
          echo "::set-env name=RELEASE_VERSION::$RELEASE_VERSION"
          echo "Release Version is $RELEASE_VERSION"
          echo "$RELEASE_VERSION" > VERSION
          if echo "$RELEASE_VERSION" | grep "rc" > /dev/null ; then
            echo "::set-env name=RELEASE_PRE::true"
            echo "::set-env name=RELEASE_LATEST::false"
          else
            echo "::set-env name=RELEASE_PRE::false"
            echo "::set-env name=RELEASE_LATEST::true"
          fi
      - name: Create Plugins
        run: |
          bash -c "chmod 755 .github/scripts/plugins.sh; .github/scripts/plugins.sh"
          bash -c "cd plugins/kubectl;  tar zcvf ../../bob-plugins-${{ env.RELEASE_VERSION }}.tgz *; cd ../.."
      - name: Prebuild
        run: |
          bash -c "ls distro/ubuntu-focal-latest-* 2>/dev/null; if [ $? = 0 ]; then rm -f distro/ubuntu-focal-latest-* ;fi; touch distro/ubuntu-focal-latest-semiphore"
      - name: Prepush
        uses: github-actions-x/commit@v2.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'master'
          commit-message: 'publish'
          force-add: 'false'
          files: distro/ubuntu-focal-latest-*
          name: rsliotta
          email: bob@bobdot.me
      - name: Build Action
        env: # Or as an environment variable
            docker_login: ${{ secrets.DOCKER_ID }}
            docker_token: ${{ secrets.DOCKER_TOKEN }}
        run: |
          bash -c "chmod 755 files/*; chmod 644 files/*.conf files/README"
          bash -c "chmod 755 .github/scripts/build_scratch_image.sh; .github/scripts/build_scratch_image.sh"
          bash -c "chmod 755 .github/scripts/makedistro.sh; .github/scripts/makedistro.sh"
          bash -c "cat distro/ubuntu-focal-latest-* > distro/ubuntu-focal-latest.tar.gz"
          bash -c "ls -l distro; tar ztvf distro/squashed-lowcarb.tar.gz"
          bash -c "chmod 755 .github/scripts/init.sh; LATEST=${{ env.RELEASE_LATEST }} PUBLISH=true TAG=$RELEASE_VERSION DOCKERFILE=dockerfiles/Dockerfile-core      .github/scripts/init.sh bob-core"
          bash -c "chmod 755 .github/scripts/init.sh; LATEST=${{ env.RELEASE_LATEST }} PUBLISH=true TAG=$RELEASE_VERSION DOCKERFILE=dockerfiles/Dockerfile-lowcarb .github/scripts/init.sh bob-lowcarb"
          bash -c "chmod 755 .github/scripts/charts.sh; .github/scripts/charts.sh"
          bash -c "cp docs/bob-${{ env.RELEASE_VERSION }}.tgz helm/bob-helm-${{ env.RELEASE_VERSION }}.tgz"
          bash -c "chmod 755 .github/scripts/update_readme.sh; .github/scripts/update_readme.sh"
          bash -c "chmod 755 .github/scripts/helpdocs.sh; .github/scripts/helpdocs.sh"
      - name: Cleanup before push
        run: |
          bash -c "rm -f distro/ubuntu-focal-latest.tar.gz"
      - name: Run Snyk to check Docker image for vulnerabilities - bob-core
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: bobdotme/bob-core:${{ env.RELEASE_VERSION }}
          args: --severity-threshold=high --debug
          command: monitor
      - name: Run Snyk to check Docker image for vulnerabilities - bob-lowcarb
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: bobdotme/bob-lowcarb:${{ env.RELEASE_VERSION }}
          args: --severity-threshold=high --debug
          command: monitor
      #- name: Run Snyk to check Kubernetes manifest file for issues
      #  uses: snyk/actions/iac@master
      #  env:
      #    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #  with:
      #    args: --severity-threshold=high --debug
      #    file: helm/chart/templates/deployment.yaml
      #    command: test
      - name: push
        uses: github-actions-x/commit@v2.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'master'
          commit-message: 'publish'
          force-add: 'true'
          files: README.md VERSION docs/index.yaml docs/*.tgz docs/commands.md docs/commands/* helm/chart/* distro/*.tar.gz distro/ubuntu-focal-latest-*
          name: rsliotta
          email: bob@bobdot.me
      - name: Release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGELOG_FILE: "docs/changes.md"
          DRAFT_RELEASE: "false"
          PRE_RELEASE: "${{ env.RELEASE_PRE }}"
          ALLOW_EMPTY_CHANGELOG: "false"
          ALLOW_TAG_PREFIX: "true"
        with:
          args: |
            examples/testpv.yaml
            bob-plugins-${{ env.RELEASE_VERSION }}.tgz
            plugins/installer.sh
            helm/bob-helm-${{ env.RELEASE_VERSION }}.tgz
