name: release
on:
  push:
    tags:
    - "v[0-9]+.[1-9]+.[0-9]*"
jobs:
  runs-on: self-hosted
  release:
    runs-on: ubuntu-20.04
    steps:
      - name: send custom message with args
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v1
      - run: |
          export POSTFIX=" (Codename: '$(cat CODENAME)')"
          echo "RELEASE_NAME_POSTFIX=$POSTFIX" >> $GITHUB_ENV
      - name: Print Release Version
        run: |
          export RELEASE_VERSION=$(echo $GITHUB_REF | awk -F\/ '{print $3}')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "Release Version is $RELEASE_VERSION" 
          echo "$RELEASE_VERSION" > VERSION
          if echo "$RELEASE_VERSION" | grep "rc" > /dev/null ; then
            echo "RELEASE_PRE=true" >> $GITHUB_ENV
            echo "RELEASE_LATEST=false" >> $GITHUB_ENV
          else
            echo "RELEASE_PRE=false" >> $GITHUB_ENV
            echo "RELEASE_LATEST=true" >> $GITHUB_ENV
          fi
      - name: Create Plugins
        run: |
          bash -c "chmod 755 .github/scripts/plugins.sh; .github/scripts/plugins.sh"
          bash -c "cd plugins/kubectl;  tar zcvf ../../bob-plugins-${{ env.RELEASE_VERSION }}.tgz *; cd ../.."
      - name: Prebuild
        run: |
          bash -c "cd distro; wget https://github.com/262life/bob-ubuntu-image/releases/latest/download/ubuntu-focal-latest.tar.gz"
          bash -c "cd distro; wget https://github.com/262life/bob-ubuntu-image/releases/latest/download/squashed-lowcarb.tar.gz"
      - name: Build Action
        env: # Or as an environment variable
            docker_login: ${{ secrets.DOCKER_ID }}
            docker_token: ${{ secrets.DOCKER_TOKEN }}
        run: |
          bash -c "chmod 755 files/*; chmod 644 files/*.conf files/README"
          bash -c "chmod 755 .github/scripts/init.sh; LATEST=${{ env.RELEASE_LATEST }} PUBLISH=true TAG=$RELEASE_VERSION DOCKERFILE=dockerfiles/Dockerfile-core      .github/scripts/init.sh bob-core"
          bash -c "chmod 755 .github/scripts/init.sh; LATEST=${{ env.RELEASE_LATEST }} PUBLISH=true TAG=$RELEASE_VERSION DOCKERFILE=dockerfiles/Dockerfile-lowcarb .github/scripts/init.sh bob-lowcarb"
          bash -c "chmod 755 .github/scripts/charts.sh; .github/scripts/charts.sh"
          bash -c "chmod 755 .github/scripts/update_readme.sh; .github/scripts/update_readme.sh"
          bash -c "chmod 755 .github/scripts/helpdocs.sh; .github/scripts/helpdocs.sh"
      - name: Run Snyk to check Docker image for vulnerabilities - bob-core
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: 262life/bob-core:${{ env.RELEASE_VERSION }}
          args: --severity-threshold=high --debug
          command: monitor
      - name: Run Snyk to check Docker image for vulnerabilities - bob-lowcarb
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: 262life/bob-lowcarb:${{ env.RELEASE_VERSION }}
          args: --severity-threshold=high --debug
          command: monitor
      #- name: Run Snyk to check Kubernetes manifest file for issues
      #  uses: snyk/actions/iac@master
      #  env:
      #    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #  with:
      #    args: --severity-threshold=high --debug
      #    file: helm/chart/templates/deployment.yaml
      #    command: test
      - name: push
        uses: github-actions-x/commit@v2.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'master'
          commit-message: 'publish'
          force-add: 'true'
          files: README.md VERSION index.yaml helm/repo/*.tgz docs/commands.md docs/commands/* helm/chart/*
          name: rsliotta
          email: bob@262.life
      - name: Release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGELOG_FILE: "CHANGES.md"
          DRAFT_RELEASE: "false"
          PRE_RELEASE: "${{ env.RELEASE_PRE }}"
          ALLOW_EMPTY_CHANGELOG: "false"
          ALLOW_TAG_PREFIX: "true"
        with:
          args: |
            examples/testpv.yaml
            bob-plugins-${{ env.RELEASE_VERSION }}.tgz
            plugins/installer.sh
            helm/bob-helm-${{ env.RELEASE_VERSION }}.tgz
      - name: send custom message with args
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
 
