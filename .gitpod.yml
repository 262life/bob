image:
  file: .gitpod.Dockerfile
tasks:
  - init: 'set +x; clear'
    command: |
      set +x;clear

      [ ${OKTETO_TOKEN:-none} == 'none' ] && echo "OKTETO_TOKEN Not set!              This will surely cause issues below...." 
      [ ${OKTETO_USER:-none} == 'none' ] && echo "OKTETO_USER Not set!                This will surely cause issues below...." 
      [ ${OKTETO_REPOSITORY:-none} == 'none' ] && echo "OKTETO_REPOSITORY Not set!    This will surely cause issues below...." 
      [ ${OKTETO_BRANCH:-none} == 'none' ] && echo "OKTETO_BRANCH Not set!            This will surely cause issues below...." 
      
      # Added to bashrc so each shell gets the settings
      cat <<EOD >> ~/.bashrc
      function gt() {
        TAG=\${1}; git tag --delete \${TAG} 2>/dev/null; git push  --delete origin \${TAG} 2>/dev/null; git tag  \${TAG}; git push --tags
      }

      #function build() {
      #  gq https://cloud.okteto.com/graphql -H "Authorization: Bearer \$OKTETO_TOKEN" -q 'mutation deployGitRepository(\$name: String!, \$space: String!, \$repository: String!, \$branch: String!) {deployGitRepository( name: \$name, space: \$space, repository: \$repository, branch: \$branch ) {id, status}}' -v 'name=bob' -v 'space=' -v 'repository=https://github.com/BobDotMe/bob' -v 'branch=master'
      #}

      function build() {
        okteto pipeline deploy  --repository ${OKTETO_REPOSITORY} --branch ${OKTETO_BRANCH}
      }

      EOD
    
      echo "source <(kubectl completion bash)" >> ~/.bashrc
      echo "source <(curl -s -L https://github.com/BobDotMe/k8s_shortcuts/releases/latest/download/k8s_shortcuts)" >> ~/.bashrc

      ## Done once per startup
      mkdir ~/.ssh 2>/dev/null
      mkdir ~/.kube 2>/dev/null
      echo $LUCIFER_ID_RSA | base64 --decode > ~/.ssh/id_rsa
      echo $LUCIFER_ID_RSA_PUB | base64 --decode > ~/.ssh/id_rsa.pub
      echo $LUCIFER_ID_RSA_CERT_PUB | base64 --decode > ~/.ssh/id_rsa-cert.pub
      chmod -R 700 ~/.ssh
      echo ${OKTETO_TOKEN} | docker login registry.cloud.okteto.net -u ${OKTETO_USER} --password-stdin 2>/dev/null
      okteto login --token $OKTETO_TOKEN
      okteto namespace $OKTETO_USER
      cp ~/.kube/config ~/.kube/okteto.cfg
      exec /bin/bash
